q <- qt(0.025,11)
q
pnorm()
7.15 - 0.186*5
1 - (1-10^-4)^500
pbinom(2,10000,0.0001)
pbinom(96,400,0.2)
pbinom(63,400,0.2)
pbinom(96,400,0.2) - pbinom(63,400,0.2)
z <- (0.49-0.13)/sqrt(0.49*0.51/100);z
x1 <- 60*120/100;x1
x2 <- 62.5*120/100;x2
pbinom(x1,120,0.637)
pbinom(x2,120,0.637)
pbinom(x1-1,120,0.637)
pbinom(x2,120,0.637)-pbinom(x1-1,120,0.637)
1.6/3
0.8+2/3-1.6/3
(2/3-1.6/3)/(1-0.8)
pbinom(17,250,0.1)
pbinom(18,250,0.1)
pbinom(18,250,0.06)
229-128
271-242
101+29
128+242
29/271
120/370
128/370
229/500
242/370
.3*0.3*0.3*0.7
dbinom(7,14,0.6)
dpois(8,12)
1-dbinom(0,30,0.22)
1-pbinom(5,30,0.22)
pbinom(5,30,0.22)
qnorm(0.08,lower.tail = FALSE)
s2 <- (76*0.3^2 + 53*0.85^2)/(77+54-2)
s2
sqrt(s2*(1/77+1/54))
sqrt(s2*(1/77+1/54))*1.4051
r1 <- 1-1/10.781
r1
r2 <- 1-1/5.2553
r2
(r1-r2)/r1
1-0.4*exp(-0.0001*2000)
####################################################
x <- c(11,15,20,17,9,12,16,13,8,14,22,10,16,9)
m <- mean(x);m
sum(x*x)
s <- sd(x);s
z0 <- sqrt(12)*(m-12)/s;z0
qnorm(0.1)
z0 <- sqrt(20)*(30-35)/15;z0
qnorm(0.05)
qnorm(0.05/2)
s <- sqrt((49*100+59*14*14)/(49+59));s
z <- (-3)/(s*sqrt(1/50+1/60));z
qnorm(0.01/2)
y <- 9.336+9.102;y
qt(0.02,8)
11+9+8+9+10
##############################################333
disease <-rep(c("Present","Absent"),each=9)
disease
species <- rep(1:3,each=3)
species
species <- rep(rep(1:3,each=3),2)
species
location <- rep(1:3,6)
location
info <- c(34,12,20,50,44,18,23,31,22,83,97,34,87,75,55,68,48,43)
data <- data.frame(disease,species,location,info)
data
df <- table(data)
df
mantelhaen.test(df)
Table <- xtabs(info~disease+species+location,data=data1)
data1 <- data.frame(disease,species,location,info)
Table <- xtabs(info~disease+species+location,data=data1)
Table
ftable(Table)
mantelhaen.test(Table)
disease <-as.factor(rep(c("Present","Absent"),each=9))
species <- as.factor(rep(rep(1:3,each=3),2))
location <- as.factor(rep(1:3,6))
info <- c(34,12,20,50,44,18,23,31,22,83,97,34,87,75,55,68,48,43)
data1 <- data.frame(disease,species,location,info)
Table <- xtabs(info~disease+species+location,data=data1)
ftable(Table)
# H0: The two nominal variables are conditionally  independent in each stratum, assuming that there is no three-way interaction.
# H1: The two nominal variables are not conditionally  independent in each stratum, assuming that there is no three-way interaction.
mantelhaen.test(Table)
# Comment: As the p-value = 0.01432 < 0.05, we can easily reject the null hypothesis at 5% level of significance.
# Thus, the tow variables, species and location are not conditionally independent in each of the strata - disease present and disease absent.
44/20
2.2-0.6*.6
8/20
p <- 0.975 + pt(-1.706,27)
p
pt(-1.706,27)
pt(-1.706,27)+0.975->p
p
pt(-1.706,27)
pt(-1.706,27)+0.975->p
49+18
67/(4*42)
56/67
p <- (0.85+3*0.15)^2;p
p <- (0.85+3*0.15)^2/16;p
200*0.48
o <- c(88,102,8)
sum(o)
o <- c(88,102,10)
e <- c(96,96,8)
sum(e)
x <- sum((o-e)^2/o^2)
x
x <- sum((o-e)^2/e^2)
x
x <- sum((o-e)^2/e)
x
qchisq(0.05,2,lower.tail = FALSE)
1.96/2
s2 <- (45*48^2+46*900)/91
s2
t <- (-4)/sqrt(s2*(1/46+1/47))
t
46+47-2 -> df
df
2*pt(abs(t),df,lower.tail = FALSE)
pt(abs(t),91,lower.tail = FALSE)
pt(abs(t),91,lower.tail = FALSE)*2
4/7.962
# (a)
g <- rep(1:20,each = 5)
g
y <- tapply(g,1,FUN = mean)
y
y <- tapply(g,2,FUN = mean)
fac <- factor(g, levels = 1:20)
fac
table(fac)
y <- tapply(table(fac),FUN = mean)
y <- tapply(table(fac),1,FUN = mean)
y <- tapply(table(fac),2,FUN = mean)
tapply(1:n, fac, mean)
# (a)
g <- rep(1:20,each = 5)
fac <- factor(g, levels = 1:20)
fac
fac <- factor(g, )
fac
table(fac)
tapply(1:n, fac, mean)
y <- tapply(table(fac),2,FUN = mean)
y <- tapply(table(fac),2,FUN = mean)
y <- tapply(fac,2,FUN = mean)
y <- tapply(fac,1,FUN = mean)
g1 <- matrix(g,nrow = 20, byrow = TRUE)
g1
y <- tapply(g1,1,FUN = mean)
y <- apply(g1,1,FUN = mean)
y
y <- tapply(1:20,g,FUN = mean)
# (a)
g <- as.factors(rep(1:20,each = 5))
# (a)
g <- as.factorsrep(1:20,each = 5))
# (a)
g <- as.factor(rep(1:20,each = 5))
g
y <- tapply(1:20,g,FUN = mean)
y <- tapply(1:100,g,FUN = mean)
y
y <- tapply(1:20,g,FUN = mean)
y <- tapply(1:100,g,FUN = mean)
y
g
# (a)
g <- as.factor(rep(1:20,each = 5),levels = 20)
# (a)
g <- as.factor(rep(1:20,each = 5))
# (a)
g <- rep(1:20,each = 5)
y <- tapply(1:100,g,FUN = mean)
y
y <- tapply(1:100,t(g),FUN = mean)
y
g
y <- tapply(1:100,g1,FUN = mean)
y
y <- tapply(1:20,g1,FUN = mean)
y
y <- tapply(1:20,g1,FUN = mean)
y
g1 <- matrix(g,ncol = 20)
y <- tapply(1:20,g1,FUN = mean)
y
y <- tapply(1:100,g1,FUN = mean)
y
x1 <- 17;n1 <- 85;x2 <- 24;n2 <- 80
p1 <- x1/n1;p1
p2 <- x2/n2;p2
p <- (x1+x2)/(n1+n2);p
s <- sqrt(p*(1-p)*(1/85+1/80));s
t <- (p1-p2)/s;t
s1 <- sqrt(p1*(1-p1)/n1+p2*(1-p2)/n2)
s1
0.1/s1
s <- 683+925+834+204+229+926+374+501
s
s/10222
x1 <- (35737-51623)/7943;x1
x2 <- (67509-51623)/7943;x2
pnorm(2)-pnorm(-2)
(22+28)/2
(20+22+26+24+28)/5
(21+23+22+24+24+23+25+25+27+26)/10
s2 <- 29*(4.2^2+3.9^2)/58;s2
t0 <- 6/sqrt(s2/15);t0
q <- qt(0.05,58,lower.tail = FALSE)
q
pt(t0,58,lower.tail = FALSE)
ppois(3,6)
1-ppois(3,10)
powermat <- function(x,m)
{
l <- length(x)
mat <- matrix(,ncol = m,nrow = l)
for(i in 1:m) mat[,i] <- x^(i-1)
return(mat)
}
powermat(x,m)
########################################################
powermat <- function(as.vector(x),m)
{
l <- length(x)
mat <- matrix(,ncol = m,nrow = l)
for(i in 1:m) mat[,i] <- x^(i-1)
return(mat)
}
x <- c(1,2,3,4,0);m <- 5
powermat(x,m)
########################################################
powermat <- function(as.vector(x),m)
{
l <- length(x)
mat <- matrix(,ncol = m,nrow = l)
for(i in 1:m) mat[,i] <- x^(i-1)
return(mat)
}
########################################################
powermat <- function(as.vector(x),m)
{
l <- length(x)
mat <- matrix(,ncol = m,nrow = l)
for(i in 1:m) mat[,i] <- x^(i-1)
mat
}
x <- c(1,2,3,4,0);m <- 5
powermat(x,m)
########################################################
powermat <- function(as.vector(x),m)
{
l <- length(x)
mat <- matrix(,ncol = m,nrow = l)
for(i in 1:m) mat[,i] <- x^(i-1)
mat
}
x <- c(1,2,3,4,0);m <- 5
powermat(x,m)
########################################################
powermat <- function(Vectorize(x),m)
{
l <- length(x)
mat <- matrix(,ncol = m,nrow = l)
for(i in 1:m) mat[,i] <- x^(i-1)
mat
}
x <- c(1,2,3,4,0);m <- 5
powermat(x,m)
powermat <- function(Vectorize(x),m)
{
l <- length(x)
mat <- matrix(,ncol = m,nrow = l)
for(i in 1:m) mat[,i] <- x^(i-1)
mat
}
########################################################
powermat <- Vectorize(function(Vectorize(x),m))
{
l <- length(x)
mat <- matrix(,ncol = m,nrow = l)
for(i in 1:m) mat[,i] <- x^(i-1)
mat
}
x <- c(1,2,3,4,0);m <- 5
powermat(x,m)
########################################################
powermat <- function(x,m)
{
l <- length(x)
mat <- matrix(,ncol = m,nrow = l)
for(i in 1:m) mat[,i] <- x^(i-1)
mat
}
x <- c(1,2,3,4,0);m <- 5
powermat(x,m)
powermat <- function(x,m)
{
l <- length(x)
mat <- matrix(,ncol = m,nrow = l)
for(i in 1:m) mat[,i] <- x^(i-1)
mat
}
x <- c(1,2,3,4,0);m <- 5
powermat(x,m)
x <- c(1,2,3,4,0,5);m <- 5
powermat(x,m)
x <- c(1,2,3,4,0);m <- 5
powermat(x,m)
powermat <- function(x,m)
{
l <- length(x)
mat <- matrix(,ncol = m,nrow = l)
for(i in 1:m) mat[,i] <- x^(i-1)
mat
}
x <- c(1,2,3,4,0);m <- 5
powermat(x,m)
exp(-5/4)
pbinom(3,10,0.2865)
100*25/26.6
m <- 58; s <- 15
x <- 40
pf <- pnorm(x,m,s)
pf
(x-m)/s
pnorm(-1.2)
x1 <- 85
z1 <- (x1-m)/s;z1
pnorm(z1,lower.tail = FALSE)
1-pnbinom(5,1,pf)
dnbinom(6,2,0.03593032)
pnorm(z1,lower.tail = FALSE) -> pa
pa
pbinom(2,10,pa)
p <- c(0.645,0.21,0.05,0.095)
p*158
p*158 -> e
e
qchisq(0.05,3,lower.tail = FALSE)
o <- c(97,33,5,23)
x <- sum((o-e)^2/e)
x
######################################################################
s <- sqrt(0.83*0.17/100);s
z0 <- (0.86-0.9)/s;z0
s1 <- sqrt(0.9*0.1/100)
s1
z0 <- (0.83-0.9)/s;z0
z1 <- (0.83-0.9)/s1;z1
plot(t,p_prime,xlab = "Time, t", ylab = "p'(t)",main = "Plot of p'(t)")
###################################################################
t <- seq(0,100,length = 100)
p_prime <- -46.645*exp(-0.491*t)
plot(t,p_prime,xlab = "Time, t", ylab = "p'(t)",main = "Plot of p'(t)")
plot(t,p_prime,xlab = "Time, t", ylab = "p'(t)",main = "Plot of p'(t)",type="l")
###################################################################
t <- seq(0,50,length = 100)
p_prime <- -46.645*exp(-0.491*t)
plot(t,p_prime,xlab = "Time, t", ylab = "p'(t)",main = "Plot of p'(t)",type="l")
###################################################################
t <- seq(0,25,length = 100)
p_prime <- -46.645*exp(-0.491*t)
plot(t,p_prime,xlab = "Time, t", ylab = "p'(t)",main = "Plot of p'(t)",type="l")
###################################################################
t <- seq(0,20,length = 100)
p_prime <- -46.645*exp(-0.491*t)
plot(t,p_prime,xlab = "Time, t", ylab = "p'(t)",main = "Plot of p'(t)",type="l")
plot(t,p_prime,xlab = "Time, t", ylab = "p'(t)",main = "Plot of p'(t)",type="l",col=3,lwd=2)
46.645/0.491
### (b) Plot for p(t)
p <- 95*exp(-0.491*t)
plot(t,p,xlab = "Time, t", ylab = "p(t)",main = "Plot of p(t)",type="l",col=2,lwd=2)
95*exp(-0.491*0.4)
### (a) Plot for p'(t)
t <- seq(0,20,length = 100)
p_prime <- -46.645*exp(-0.491*t)
plot(t,p_prime,xlab = "Time, t", ylab = "p'(t)",main = "Plot of p'(t)",type="l",col=3,lwd=2)
### (c) Plot for p(t)
p <- 95*exp(-0.491*t)
plot(t,p,xlab = "Time, t", ylab = "p(t)",main = "Plot of p(t)",type="l",col=2,lwd=2)
### (d)  Blood Pressure at time 0.1 second.
95*exp(-0.491*0.4)  ## Blood Pressure at time 0.1 second.
##############################################################
x <- c(0.25,0.33,0.35,0.10,0.21,0.10)
sx <- sum(x);sx
sx2 <- sum(x*x);sx2
m <- sx/6
m
s2 <- sd(x);sd
s2 <- sd(x);s2
z <- (m-3)/sqrt(s2/6);z
pnorm(z)
pnorm(abs(z),lower.tail = FALSE)
################################################################
t <- 10^4; rho <- 0.9
x <- rep(0,times = t)
x[1] <- rnorm(1,0,1); # x[1] represents X(0)
epsilon <- rnorm(t,0,1) # the error component of the Markov chain
for(i in 2:t)
{
x[i] <- rho*x[i-1]+epsilon[i-1]
}
hist(x,col=3)
ks.test(x,pnorm,0,1/sqrt(1-rho^2))
# Comment: The histogram suggess that the dat is normally distributed.
# Comment: p-value for the Kolmogorv-Smirnov test is 0.003081 < 0.05.
# Therefore, we have to reject the null hypothesis.
shapiro.test(x)
t <- 10^4; rho <- 0.9
x <- rep(0,times = t)
x[1] <- rnorm(1,0,1); # x[1] represents X(0)
epsilon <- rnorm(t,0,1) # the error component of the Markov chain
for(i in 2:t)
{
x[i] <- rho*x[i-1]+epsilon[i-1]
}
hist(x,col=3)
ks.test(x,pnorm,0,1/sqrt(1-rho^2))
# Comment: The histogram suggests that the data is normally distributed.
# Comment: p-value for the Kolmogorv-Smirnov test is 0.003081 < 0.05.
# Therefore, we have to reject the null hypothesis.
# Thus, the given normal distribution is not a good fit for the sample data.
t <- 10^4; rho <- 0.9
x <- rep(0,times = t)
x[1] <- rnorm(1,0,1); # x[1] represents X(0)
epsilon <- rnorm(t,0,1) # the error component of the Markov chain
for(i in 2:t)
{
x[i] <- rho*x[i-1]+epsilon[i-1]
}
hist(x,col=3)
ks.test(x,pnorm,0,1/sqrt(1-rho^2))
t <- 10^4; rho <- 0.9
x <- rep(0,times = t)
x[1] <- rnorm(1,0,1); # x[1] represents X(0)
epsilon <- rnorm(t,0,1) # the error component of the Markov chain
for(i in 2:t)
{
x[i] <- rho*x[i-1]+epsilon[i-1]
}
hist(x,col=3)
ks.test(x,pnorm,0,1/sqrt(1-rho^2))
# Comment: The histogram suggests that the data is normally distributed.
# Comment: p-value for the Kolmogorv-Smirnov test is 0.0476 < 0.05.
# Therefore, we have to reject the null hypothesis.
# Thus, the given normal distribution is not a good fit for the sample data.
t <- 10^4; rho <- 0.9
x <- rep(0,times = t)
x[1] <- rnorm(1,0,1); # x[1] represents X(0)
epsilon <- rnorm(t,0,1) # the error component of the Markov chain
for(i in 2:t)
{
x[i] <- rho*x[i-1]+epsilon[i-1]
}
hist(x,col=3)
ks.test(x,pnorm,0,1/sqrt(1-rho^2))
# Comment: The histogram suggests that the data is normally distributed.
# Comment: p-value for the Kolmogorv-Smirnov test is 0.006674 < 0.05.
# Therefore, we have to reject the null hypothesis.
# Thus, the given normal distribution is not a good fit for the sample data.
m<- 45;s <- 15
x <- 27
z <- (x-m)/s;z
pnorm(z)
x1 <- 39
z1 <- (x1-m)/s;z1
pnorm(z1)
0.3445783 -0.1150697
qnorm(0.95,45,15)
qnorm(0.95)
z2 <- -15/sqrt(15^2+5^2)
z2
z2
pnorm(z2,lower.tail = FALSE)
library(MMatrix)
library(Matrix)
expm(P,3)
P <- matrix(c(0.5,0.4,0.3,0.3,0.20.3,0.2,0.4,0.3))
P <- matrix(c(0.5,0.4,0.3,0.3,0.20.3,0.2,0.4,0.3),nrow=3)
P <- matrix(c(0.5,0.4,0.3,0.3,0.2,0.3,0.2,0.4,0.3),nrow=3)
P
power
P%^%3
library(expm)
P%^%3
p <- c(0.3,0.3,0.4)
p
P%^%3%*%p
x <- sqrt(10)*(2.226-2.1)/0.769;x
2*pnorm(x,lower.tail = FALSE)
2*pt(x,lower.tail = FALSE)
2*pt(x,lower.tail = FALSE,df=9)
2*pt(x,lower.tail = FALSE,df=9)/2
setwd("C:/Users/bhoga/Downloads/rdevguide-SaranjeetKaur")
R.Version()
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
